// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: usuario.sql

package db

import (
	"context"
)

const createUsuario = `-- name: CreateUsuario :one
INSERT INTO Usuario ( nombre, apellido, email, contraseña) 
            VALUES ( $1, $2, $3, $4 )
RETURNING id_usuario, nombre, apellido, email, "contraseña", fecha_registro
`

type CreateUsuarioParams struct {
	Nombre     string `json:"nombre"`
	Apellido   string `json:"apellido"`
	Email      string `json:"email"`
	Contraseña string `json:"contraseña"`
}

func (q *Queries) CreateUsuario(ctx context.Context, arg CreateUsuarioParams) (Usuario, error) {
	row := q.db.QueryRowContext(ctx, createUsuario,
		arg.Nombre,
		arg.Apellido,
		arg.Email,
		arg.Contraseña,
	)
	var i Usuario
	err := row.Scan(
		&i.IDUsuario,
		&i.Nombre,
		&i.Apellido,
		&i.Email,
		&i.Contraseña,
		&i.FechaRegistro,
	)
	return i, err
}

const getUsuario = `-- name: GetUsuario :one
SELECT id_usuario, nombre, apellido, email, "contraseña", fecha_registro FROM Usuario WHERE id_usuario = $1
`

func (q *Queries) GetUsuario(ctx context.Context, idUsuario int32) (Usuario, error) {
	row := q.db.QueryRowContext(ctx, getUsuario, idUsuario)
	var i Usuario
	err := row.Scan(
		&i.IDUsuario,
		&i.Nombre,
		&i.Apellido,
		&i.Email,
		&i.Contraseña,
		&i.FechaRegistro,
	)
	return i, err
}
